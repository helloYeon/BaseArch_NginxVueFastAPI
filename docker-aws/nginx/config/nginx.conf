pid /var/run/nginx.pid;
worker_processes auto;

events {
  worker_connections 1024;
}

http {
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" $request_time';

  map $http_user_agent $log_ua {
      ~ELB-HealthChecker 0;
      default 1;
  }

  proxy_read_timeout 1800;
  proxy_connect_timeout 1800;
  proxy_send_timeout 1800;

  access_log /dev/stdout main if=$log_ua;
  error_log  /dev/stdout;

  include mime.types;
  include fastcgi.conf;
  default_type application/octet-stream;
  sendfile on;
  tcp_nopush on;
  server_tokens off;
  client_max_body_size 10M;
  gzip on;
  gzip_disable "msie6";
  gzip_vary on;
  gzip_proxied any;
  gzip_comp_level 6;
  gzip_buffers 16 8k;
  gzip_http_version 1.1;
  gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;

  upstream frontend {
    server vue:8081;
  }

  upstream backend {
    server python:8000;
  }

  server {
    listen [::]:80;
    listen 80 default_server;
    server_name _;
    root /app/public;
    index  index.html;

    disable_symlinks off;

    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";

    charset utf-8;

    location /api/ {
      proxy_pass http://backend;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_redirect off;
    }

    location / {
      if ($request_method = 'OPTIONS') {
          add_header Access-Control-Allow-Origin '*';
          add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS';
          add_header Access-Control-Allow-Headers '*, Authorization, Accept, Content-Type, Content-Length, Accept-Encoding';
          add_header Access-Control-Max-Age '3600';
          add_header Access-Control-Allow-Credentials true;
          return 204;
      }

      proxy_pass http://frontend;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_redirect off;

      # try_files $uri $uri/ /index.html?$query_string;
    }

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    error_page 404 /index.html;

    location = /api/v1/hc {
      empty_gif;
      access_log off;
      break;
    }

    location ~ /\.(?!well-known).* {
      deny all;
    }
  }
}
